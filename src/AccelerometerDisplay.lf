/**
 * Display three dimensions of accelerometer measurements on the LCD display of the
 * <a href="https://www.pololu.com/docs/0J86">Pololu 3pi+ 2040 robot</a>. To run this program, first
 * put the robot in BOOTSEL mode (hold button B while resetting). Then the sequence of commands is
 * something like this:
 * ```
 *     $ cd ~/lf-pico
 *     $ lfc src/AccelerometerDisplay.lf
 *     ...
 *     $ picotool load -x bin/AccelerometerDisplay.elf
 * ```

 *
 * This compiles the program, loads it into flash memory on the robot, and begins executing it.
 *
 * @author Edward A. Lee
 */
target C {
  platform: "RP2040",
  single-threaded: true
}

import Accelerometer from "lib/IMU.lf"
import Display from "lib/Display.lf"

main reactor {
  a = new Accelerometer()
  d = new Display()
  timer t(0, 250 msec)
  state m_x: float = 1.019  ///Calibration:
  state b_x: float = 0.009
  state m_y: float = 1
  state b_y: float = -0.02
  state m_z: float = 1.03
  state b_z: float = 0.01

  reaction(t) -> a.trigger {=
    lf_set(a.trigger, true);
  =}

  reaction(a.x, a.y, a.z) -> d.line0, d.line1, d.line2 {=
    /// TODO: define max string size for line
    /// based on font you can have 4 or 8 lines
    static char buf0[17];
    static char buf1[17];
    static char buf2[17];


    snprintf(buf0, 17, "x:%2.4f", ((a.x->value)-self->b_x)/self->m_x);
    snprintf(buf1, 17, "y:%2.4f", ((a.y->value)-self->b_y)/self->m_y);
    snprintf(buf2, 17, "z:%2.4f", ((a.z->value)-self->b_z)/self->m_z);

    lf_set(d.line0, buf0);
    lf_set(d.line1, buf1);
    lf_set(d.line2, buf2);
  =}
}
